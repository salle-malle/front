name: Deploy Frontend to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          # Create deployment directory
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p /var/www/salle-malle-front"

          # Copy build files
          scp -r .next ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/salle-malle-front/
          scp -r public ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/salle-malle-front/
          scp package.json ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/salle-malle-front/
          scp next.config.mjs ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/salle-malle-front/
          scp .env.production ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/salle-malle-front/

          # Copy deployment script
          scp deploy.sh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/salle-malle-front/

          # Execute deployment script
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "cd /var/www/salle-malle-front && chmod +x deploy.sh && ./deploy.sh"
